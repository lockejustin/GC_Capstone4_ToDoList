@{
    ViewData["Title"] = "To Do List";
}

@model List<ToDo>

<h1>To Do List for @ViewBag.UserName</h1>

<table id="ToDoListTable" class="table table-bordered shadow table-hover table-info">
    <tr class="table table-bordered shadow table-hover table-info">
        <th>Task Id</th>
        <th>Task Description</th>
        <th onclick="sortTable(2)">Due Date</th>
        <th onclick="sortTable(4)">Completed</th>
        <th></th>
    </tr>

    @foreach (ToDo t in Model)
    {
<tr class="d-table-row">
    <td>@t.TaskId</td>
    <td>@t.TaskDescription</td>
    <td>@t.DueDate.ToShortDateString()</td>
    @if (t.Complete == true)
    {
        <td class="btn-group-toggle">Yes 
            <a href="../ToDoList/UpdateCompletion?id=@t.TaskId">Mark Incomplete</a>
        </td>
    }
    else
    {
        <td class="btn-group-toggle">No 
            <a href="../ToDoList/UpdateCompletion?id=@t.TaskId">Mark Complete</a>
        </td>
    }

    <td class="btn-info">
        <a href="../ToDoList/DeleteTask?id=@t.TaskId">Delete</a>
    </td>
</tr>
    }
</table>


<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("ToDoListTable");
        switching = true;
        // Set the sorting direction to ascending:
        dir = "asc";
        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
        // Start by saying: no switching is done:
        switching = false;
        rows = table.rows;
        /* Loop through all table rows (except the
        first, which contains table headers): */
        for (i = 1; i < (rows.length - 1); i++) {
            // Start by saying there should be no switching:
            shouldSwitch = false;
            /* Get the two elements you want to compare,
            one from current row and one from the next: */
            x = rows[i].getElementsByTagName("TD")[n];
            y = rows[i + 1].getElementsByTagName("TD")[n];
            /* Check if the two rows should switch place,
            based on the direction, asc or desc: */
            if (dir == "asc") {
            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                // If so, mark as a switch and break the loop:
                shouldSwitch = true;
                break;
            }
            } else if (dir == "desc") {
            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                // If so, mark as a switch and break the loop:
                shouldSwitch = true;
                break;
            }
            }
        }
        if (shouldSwitch) {
            /* If a switch has been marked, make the switch
            and mark that a switch has been done: */
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            // Each time a switch is done, increase this count by 1:
            switchcount ++;
        } else {
            /* If no switching has been done AND the direction is "asc",
            set the direction to "desc" and run the while loop again. */
            if (switchcount == 0 && dir == "asc") {
            dir = "desc";
            switching = true;
            }
        }
        }
    }
</script>

<a href="../ToDoList/AddTask" class="btn-group-vertical">Add New Task</a>
<br />
<br />
<form action="../ToDoList/ToDoList" method="post">
    <input type="text" name="searchString" placeholder="Search by Description" class="form-control mb-4" />
    <input type="submit" value="Search" class="form-control mb-4" />
</form>
